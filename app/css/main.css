/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,:after,:before{box-sizing:border-box}html{overflow-X:hidden}body{font-family:'Open Sans',sans-serif;background-color:#f2f3f8;margin:0;padding:0}h1,h2,li,ol,p,ul{margin:0;padding:0}a{color:inherit;text-decoration:none}.title{text-align:center}.title .title--decor{position:relative}.title .title--decor:after{content:'';background-color:#fff;position:absolute;top:50%;width:2rem;right:-2.5rem;height:3px;border-top:1px solid #242938}.title .title--decor:before{content:'';background-color:#fff;position:absolute;top:50%;left:-2.5rem;height:3px;width:2rem;border-top:1px solid #242938}.preloader{z-index:3;position:fixed;top:0;width:100%;height:100vh;background-color:#242938;transition:opacity ease-out .5s}.preloader .wrapper{position:absolute;width:12rem;left:0;right:0;bottom:17rem;margin-left:auto;margin-right:auto;display:flex;justify-content:space-between}@media screen and (min-width:599px){.preloader .wrapper{bottom:.5rem}}@media screen and (min-width:599px) and (min-height:420px){.preloader .wrapper{bottom:initial;top:10rem}}.preloader .wrapper__box{position:relative;margin:3rem 0;background-color:#1cb890;border-bottom:3px solid #1b9b7b;border-right:3px solid #116852;padding:1rem 1.5rem;border-radius:3px;display:inline-block;width:3rem;height:3rem}.preloader .wrapper__box--left{-webkit-animation:preload-left 5s infinite;animation:preload-left 5s infinite}.preloader .wrapper__box--center{-webkit-animation:preload 5s infinite;animation:preload 5s infinite}.preloader .wrapper__box--right{-webkit-animation:preload-right 5s infinite;animation:preload-right 5s infinite}.preloader .wrapper__box::after{width:5px;height:10px;background-color:#116852;position:absolute;content:'';right:-5px;top:calc(50% - 5px);border-radius:0 5px 5px 0}.preloader .wrapper__box::before{width:5px;height:10px;background-color:transparent;position:absolute;content:'';left:0;top:calc(50% - 5px);border-radius:0 5px 5px 0}@-webkit-keyframes preload{0%{transform:scale(1)}20%{transform:scale(.5);transform:rotate(-180deg)}50%{transform:scale(1)}80%{transform:scale(1.5)}100%{transform:scale(1)}}@keyframes preload{0%{transform:scale(1)}20%{transform:scale(.5);transform:rotate(-180deg)}50%{transform:scale(1)}80%{transform:scale(1.5)}100%{transform:scale(1)}}@-webkit-keyframes preload-left{0%{transform:scale(1);transform:translate(0)}20%{transform:scale(.5);transform:rotate(180deg)}50%{transform:scale(1);transform:translate(-100px)}80%{transform:scale(1.5)}100%{transform:scale(1)}}@keyframes preload-left{0%{transform:scale(1);transform:translate(0)}20%{transform:scale(.5);transform:rotate(180deg)}50%{transform:scale(1);transform:translate(-100px)}80%{transform:scale(1.5)}100%{transform:scale(1)}}@-webkit-keyframes preload-right{0%{transform:scale(1);transform:translate(0)}20%{transform:scale(.5);transform:rotate(180deg)}50%{transform:scale(1);transform:translate(100px)}80%{transform:scale(1.5)}100%{transform:scale(1);transform:translate(0)}}@keyframes preload-right{0%{transform:scale(1);transform:translate(0)}20%{transform:scale(.5);transform:rotate(180deg)}50%{transform:scale(1);transform:translate(100px)}80%{transform:scale(1.5)}100%{transform:scale(1);transform:translate(0)}}.stop-preloader{opacity:0;pointer-events:none}html{scroll-behavior:smooth}body{overflow-x:hidden}.nav-top{z-index:2;position:fixed;top:0;width:100vw;background-color:#242938}.nav-top .wrapper{display:flex;justify-content:space-between;align-items:center;padding:.5rem 2rem}.nav-top .wrapper .nav-top__logo{color:#fff;font-size:2.2rem}@media screen and (min-width:599px){.nav-top .wrapper .nav-top__logo{margin-left:1rem}}@media screen and (min-width:599px){.nav-top .wrapper{flex-wrap:nowrap;padding:.5rem}}@media screen and (min-width:1200px){.nav-top .wrapper{max-width:80rem;margin:0 auto}}.menu{display:flex;border-left:5px solid #1cb890;border-bottom:5px solid #1cb890;overflow:hidden;transform:translateX(90vw);top:3rem;right:0;position:absolute;flex-direction:column;flex-wrap:nowrap;padding:2rem;height:80vh;width:80vw;justify-content:space-around;align-items:center;transition:transform 1s ease-in;background-color:#242938}@media screen and (min-width:599px){.menu{height:90vh;flex-wrap:wrap}}@media screen and (min-width:599px) and (min-height:420px){.menu{padding:.5rem;flex-wrap:nowrap;justify-content:flex-end;margin-left:2rem;transform:translateX(0);top:0;position:relative;flex-direction:row;height:100%;width:100%;border-left:none;border-bottom:none}}.menu__item{position:relative;max-width:15rem;font-size:1.5rem;opacity:0;background-color:#242938;text-align:center;list-style:none;display:block;color:#fff;transition:transform .3s ease-in}@media screen and (min-width:599px) and (min-height:420px){.menu__item{opacity:1}}.menu__item:before{border-radius:3px;position:absolute;content:'';background-color:#1cb890;background:linear-gradient(to left,#1cb890,#083328);border:none;bottom:-4px;left:30%;height:5px;width:0%}.menu__item:active::before,.menu__item:hover::before{-webkit-animation:button-load-bottom .5s forwards 0s;animation:button-load-bottom .5s forwards 0s}.menu__item .link{text-decoration:none;color:inherit;font-weight:700;display:block;font-size:2.25rem;min-width:8rem;padding:.5rem}@media screen and (min-width:599px){.menu__item .link{opacity:1}}@media screen and (min-width:599px) and (min-height:420px){.menu__item .link{padding:.5rem;font-size:1.05rem}}.menu-mobile__burger{display:block}.menu-mobile__burger:hover{cursor:pointer}.menu-mobile__burger .burger__line{position:relative;height:5px;width:2rem;transition:transform 1s;background-color:#1cb890;margin-top:5px;border-radius:3px}.menu-mobile__burger .burger__line:first-of-type:after{position:absolute;top:-10px;content:'';height:.5rem;width:2rem;background-color:#1cb890;border-top-right-radius:50px;border-top-left-radius:50px}.menu-mobile__burger--toggled .burger__line:first-of-type{transform:rotateZ(30deg);transition:transform 1s}.menu-mobile__burger--toggled .burger__line:nth-of-type(3){transform:rotateZ(-30deg);transition:transform 1s}@media screen and (min-width:599px) and (min-height:420px){.menu-mobile__burger{display:none}}.toggle-mobile-nav{transform:translateX(0);transition:transform 1s ease-in}@-webkit-keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@keyframes button-load-bottom{0%{width:0%}100%{width:40%}}@-webkit-keyframes linkFading{from{opacity:0;transform:translateX(100px)}to{opacity:1;transform:translateX(0)}}@keyframes linkFading{from{opacity:0;transform:translateX(100px)}to{opacity:1;transform:translateX(0)}}.main-header{padding:.5rem;padding-top:6rem;background-color:#242938;color:#fff;text-align:center}@media screen and (min-width:599px) and (min-height:420px){.main-header{margin:0 auto;position:relative;padding-bottom:0}.main-header__background-extend{width:100%;height:25vh;background-color:#242938;z-index:-2;position:absolute;bottom:-25vh;left:0;right:0}}.main-header__title{font-size:3rem;font-weight:400}.main-header__title--decor{text-transform:uppercase;font-weight:700}.main-header__ribbon{position:relative;background-color:#34709e;font-weight:400;font-size:1.5rem;max-width:95%;width:30rem;height:3rem;margin:2rem auto;vertical-align:middle;line-height:3rem}.main-header__ribbon::after{right:-1px;top:0;position:absolute;content:'';border-style:solid;border-width:1.5rem 1.5rem 1.5rem 0;border-color:transparent #242938 transparent transparent}.main-header__ribbon::before{left:-1px;top:0;position:absolute;content:'';border-style:solid;border-width:1.5rem 0 1.5rem 1.5rem;border-color:transparent transparent transparent #242938}.main-header .btn{cursor:pointer;text-align:center;color:#fff;background-color:#1cb890;border-bottom:3px solid #158c6d;border-right:3px solid #083328;text-transform:uppercase;font-weight:700;padding:1rem 1.5rem;border-radius:3px;display:block;width:10rem;margin:2rem auto;transition:background-color .5s ease-out,color .5s ease-out}.main-header .btn:active{background-color:#083328;border-bottom:3px solid #083328;transition:background-color .5s ease-out,color .5s ease-out}.main-header__image{transform:translateY(2rem)}@media screen and (max-width:400px){.main-header__image{max-width:300px}}@media screen and (min-width:599px) and (min-height:420px){.main-header__image{transform:translateY(3rem)}}@media screen and (min-width:1200px){.main-header__image{transform:translateY(6rem)}}.about,.contact,.projects{text-align:center;padding:3rem .5rem}@media screen and (min-width:599px) and (min-height:420px){.about,.contact,.projects{max-width:80rem;margin:3rem auto}}@media screen and (min-width:1200px){.about,.contact,.projects{box-shadow:4px 7px 16px -1px rgba(0,0,0,.75)}}.about .title,.contact .title,.projects .title{padding:3rem;font-size:3rem;text-transform:uppercase}@media screen and (max-width:400px){.about .title,.contact .title,.projects .title{font-size:2rem;padding:3rem 0}}.about{z-index:1;background-color:#d64e42;color:#f2f3f8}@media screen and (min-width:599px) and (min-height:420px){.about{margin:0 auto}}.about__description{text-align:left;font-size:1.5rem;line-height:1.5;margin:1rem;color:#f2f3f8}@media screen and (min-width:1200px){.about__description{max-width:70%;margin:1rem auto}}.about,.contact,.projects{text-align:center;padding:3rem .5rem}@media screen and (min-width:599px) and (min-height:420px){.about,.contact,.projects{max-width:80rem;margin:3rem auto}}@media screen and (min-width:1200px){.about,.contact,.projects{box-shadow:4px 7px 16px -1px rgba(0,0,0,.75)}}.about .title,.contact .title,.projects .title{padding:3rem;font-size:3rem;text-transform:uppercase}@media screen and (max-width:400px){.about .title,.contact .title,.projects .title{font-size:2rem;padding:3rem 0}}.projects{background-color:#fff}@media screen and (min-width:599px) and (min-height:420px){.projects{max-width:80rem;margin:0 auto;padding-bottom:5rem}}.projects .projects-wrapper{position:relative;margin:0 auto}@media screen and (min-width:599px) and (min-height:420px){.projects .projects-wrapper{max-width:60rem}}.projects .projects-wrapper .project{padding:2rem 1rem;position:relative;width:100%;background-color:#242938;color:#f2f3f8;display:none;opacity:0;margin:1rem auto;border-radius:3px}.projects .projects-wrapper .project__title{position:relative;font-size:1.5rem;text-align:center;background-color:#f2f3f8;width:10rem;height:10rem;display:block;line-height:8.5rem;color:#242938;border-radius:200px;padding:.5rem;margin:1rem auto;border:5px solid #34709e}.projects .projects-wrapper .project__title::after{position:absolute;content:'';right:-70px;width:50px;height:1px;background-color:#34709e;top:51%}.projects .projects-wrapper .project__title::before{position:absolute;content:'';left:-70px;width:50px;height:1px;background-color:#34709e;top:51%}.projects .projects-wrapper .project__description{text-align:left;font-size:1.5rem;line-height:1.5;color:#f2f3f8}@media screen and (min-width:1200px){.projects .projects-wrapper .project__description{max-width:70%;margin:3rem auto}}.projects .projects-wrapper .project .stack-list{margin-top:1rem;list-style:none;display:flex;justify-content:space-around}.projects .projects-wrapper .project .stack-list__item{font-size:2rem}.projects .projects-wrapper .project .stack-list__item .fa-html5{color:#fb5a3d}.projects .projects-wrapper .project .stack-list__item .fa-css3-alt{color:#0072b5}.projects .projects-wrapper .project .stack-list__item .fa-js{color:#fade43}.projects .projects-wrapper .project .media{margin:2rem auto;text-align:center}.projects .projects-wrapper .project .media .btn-git{cursor:pointer;text-align:center;color:#fff;background-color:#d64e42;border-bottom:3px solid #bc3529;border-right:3px solid #681d17;text-transform:uppercase;font-weight:700;padding:1rem 1.5rem;border-radius:3px;display:block;width:10rem;margin:2rem auto;transition:background-color .5s ease-out,color .5s ease-out;display:inline-block}.projects .projects-wrapper .project .media .btn-git:active{background-color:#681d17;border-bottom:3px solid #681d17;transition:background-color .5s ease-out,color .5s ease-out}.projects .projects-wrapper .project .media .btn-heroku{cursor:pointer;text-align:center;color:#fff;background-color:#9a74ce;border-bottom:3px solid #7f4ec1;border-right:3px solid #4e2c7d;text-transform:uppercase;font-weight:700;padding:1rem 1.5rem;border-radius:3px;display:block;width:10rem;margin:2rem auto;transition:background-color .5s ease-out,color .5s ease-out;display:inline-block}.projects .projects-wrapper .project .media .btn-heroku:active{background-color:#4e2c7d;border-bottom:3px solid #4e2c7d;transition:background-color .5s ease-out,color .5s ease-out}.projects .projects-wrapper .folder{margin:3rem auto;width:95vw;height:40vw;position:relative}@media screen and (min-width:599px) and (min-height:420px){.projects .projects-wrapper .folder{max-width:60rem;max-height:30rem}}.projects .projects-wrapper .folder .folder-cover{cursor:pointer;border-radius:0 0 5px 5px;position:relative;width:100%;height:100%;background-color:#34709e;transition:transform 1s,box-shadow .5s}.projects .projects-wrapper .folder .folder-cover .btn-git{cursor:pointer;text-align:center;color:#fff;background-color:#d64e42;border-bottom:3px solid #bc3529;border-right:3px solid #681d17;text-transform:uppercase;font-weight:700;padding:1rem 1.5rem;border-radius:3px;display:block;width:10rem;margin:2rem auto;transition:background-color .5s ease-out,color .5s ease-out;display:inline-block;position:absolute;top:25%}.projects .projects-wrapper .folder .folder-cover .btn-git:active{background-color:#681d17;border-bottom:3px solid #681d17;transition:background-color .5s ease-out,color .5s ease-out}@media screen and (min-width:599px) and (min-height:420px){.projects .projects-wrapper .folder .folder-cover{max-width:60rem;max-height:30rem}}.projects .projects-wrapper .folder .folder-background{z-index:-1;border-radius:0 0 5px 5px;top:0;position:absolute;width:100%;height:100%;background-color:#242938}.projects .projects-wrapper .folder .folder-background::after{position:absolute;content:'';width:150px;height:50px;top:-50px;right:0;border-radius:5px 5px 0 0;background-color:#242938}@-webkit-keyframes show-section{from{opacity:0}to{opacity:1}}@keyframes show-section{from{opacity:0}to{opacity:1}}@-webkit-keyframes open-folder{0%{transform:translate(0,0) skew(0) scale(1,1)}50%{transform:translate(-10px,15px) skew(10deg) scale(1,.9);transition:transform 1s,box-shadow .5s;box-shadow:2px -44px 28px -6px rgba(240,231,60,.7);transform:translate(-25px,15px) skew(10deg) scale(1,.9);transition:transform 1s,box-shadow .5s}100%{transform:translate(0,0) skew(0) scale(1,1)}}@keyframes open-folder{0%{transform:translate(0,0) skew(0) scale(1,1)}50%{transform:translate(-10px,15px) skew(10deg) scale(1,.9);transition:transform 1s,box-shadow .5s;box-shadow:2px -44px 28px -6px rgba(240,231,60,.7);transform:translate(-25px,15px) skew(10deg) scale(1,.9);transition:transform 1s,box-shadow .5s}100%{transform:translate(0,0) skew(0) scale(1,1)}}@-webkit-keyframes popup{0%{transform:scale(1)}80%{transform:scale(2.2) rotate(20deg)}100%{transform:scale(2) rotate(0)}}@keyframes popup{0%{transform:scale(1)}80%{transform:scale(2.2) rotate(20deg)}100%{transform:scale(2) rotate(0)}}.contact{background-color:#34709e;color:#f2f3f8}.contact-form{margin:0 2rem}@media screen and (min-width:599px) and (min-height:420px){.contact-form{max-width:80rem}}.contact-form__input{display:block;margin:1rem auto;border:none;width:100%;padding:1rem;border-right:3px solid #448bc1;border-bottom:3px solid #90badb;font-size:1.5rem}.contact-form__input::-webkit-input-placeholder{color:#242938;font-weight:700}.contact-form__input::-moz-placeholder{color:#242938;font-weight:700}.contact-form__input:-ms-input-placeholder{color:#242938;font-weight:700}.contact-form__input::-ms-input-placeholder{color:#242938;font-weight:700}.contact-form__input::placeholder{color:#242938;font-weight:700}.contact-form__input:focus{color:#f2f3f8;background-color:#242938}.contact-form .btn{border:none;cursor:pointer;text-align:center;color:#fff;background-color:#1cb890;border-bottom:3px solid #158c6d;border-right:3px solid #083328;text-transform:uppercase;font-weight:700;padding:1rem 1.5rem;border-radius:3px;display:block;width:10rem;margin:2rem auto;transition:background-color .5s ease-out,color .5s ease-out}.contact-form .btn:active{background-color:#083328;border-bottom:3px solid #083328;transition:background-color .5s ease-out,color .5s ease-out}.footer{background-color:#242938;color:#fff;padding:2rem 5rem}.footer .info{text-align:center;font-size:.7rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
